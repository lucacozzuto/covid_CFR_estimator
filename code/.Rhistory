source("functions.R")
# Get the data
# JH
jh_data<-getDataFromJH(death_web, cases_web)
# JHUSA
jhus_data<-getDataFromJH(death_web_US, cases_web_US, TRUE)
# ECDC
ecdc_data<-(getDataFromECDC(ecdc_web))
# PC
ita_data<-(getDataFromITA(ita_web))
#Example for loading a single country
source<-"ECDC"
#get the predictions
single_country_data<-getSingleCountryData(ecdc_data, "Italy", source)
#predCFR<-calcCFR(single_country_data, start_time, time_window, go_back, forecast_time, force_delay, cfr_estimation_time)
forecast<-1
go_back<-1
predCFR<-calcCFR(single_country_data, 45, 90, go_back, forecast, 0, 30)
# predCFR, source, forecast
makeRes(predCFR, source, forecast)
source<-"JH"
#get the predictions
single_country_data<-getSingleCountryData(jh_data, "Italy", source)
#predCFR<-calcCFR(single_country_data, start_time, time_window, go_back, forecast_time, force_delay, cfr_estimation_time)
forecast<-1
go_back<-1
predCFR<-calcCFR(single_country_data, 45, 90, go_back, forecast, 0, 30)
# predCFR, source, forecast
makeRes(predCFR, source, forecast)
quit("yes")
source("functions.R")
my_data<-getDataFromECDC(death_web, cases_web)
source("functions.R")
my_data<-getDataFromECDC(death_web, cases_web)
death_web
my_data<-getDataFromJH(death_web, cases_web)
single_country_data<-getSingleCountryData(my_data, "US", "JH")
predCFR<-calcCFR(single_country_data, start_time, time_window, i, forecast, 0, time_CFR)
predCFR<-calcCFR(single_country_data, 45, 90, 14, 7, 0, 30)
head(predCFR)
predCFR
plotCFR(predCFR)
dev.off()
plotVAR(predCFR)
?local.min.max
?local.min.max
?local.min.max
?local.min.max
cvdevcfr_t<-predCFR$cvdevcfr_t
delay_time<-predCFR$delay
locmin<-local.min.max(cvdevcfr_t, add.points=FALSE)
cvdevcfr_t
is.na(cvdevcfr_t)
is.na(cvdevcfr_t)
is.na(cvdevcfr_t)<-1
cvdevcfr_t
delay_time<-predCFR$delay
cvdevcfr_t<-predCFR$cvdevcfr_t
is.na(cvdevcfr_t)
cvdevcfr_t[is.na(cvdevcfr_t)]
cvdevcfr_t[is.na(cvdevcfr_t)]<-1
cvdevcfr_t
locmin<-local.min.max(cvdevcfr_t)
delay_time
cvdevcfr_t
cvdevcfr_t<-predCFR$cvdevcfr_tsource("functions.R")
cvdevcfr_t<-predCFR$cvdevcfr_tsource("functions.R")
source("functions.R")
predCFR<-calcCFR(single_country_data, 45, 90, 14, 7, 0, 30)
plotVAR(predCFR)
source("functions.R")
predCFR<-calcCFR(single_country_data, 45, 90, 14, 7, 0, 30)
plotVAR(predCFR)
dev.off()
dev.off()
plotVAR(predCFR)
cvdevcfr_t<-predCFR$cvdevcfr_t
cvdevcfr_t
min(cvdevcfr_t)
max(cvdevcfr_t)
source("functions.R")
plotVAR(predCFR)
predCFR<-calcCFR(single_country_data, 45, 90, 14, 7, 0, 30)
plotVAR(predCFR)
quit("yes")
country <- "United_States_of_America"
start_time <- 45
time_window <- 90
source <- "JH"
forecast <- 7
gobacka <- 1
gobackb <- 151
time_CFR <- 30
outfile <- "out.txt"
if (source == "ECDC") {
my_data<-getDataFromECDC(ecdc_web)
} else if (source == "JH") {
my_data<-getDataFromJH(death_web, cases_web)
} else if (source == "JHUSA") {
my_data<-getDataFromJH(death_web_US, cases_web_US, TRUE)
} else if (source == "PC") {
my_data<-getDataFromITA(ita_web)
}
single_country_data<-getSingleCountryData(my_data, country, source)
num<-0
for(i in seq(gobackb, gobacka, -forecast)) {
predCFR<-calcCFR(single_country_data, start_time, time_window, i, forecast, 0, time_CFR)
#if (forecast>predCFR$delay) {
#predCFR$forecast<-NA
#predCFR$for_min<-NA
#predCFR$for_max<-NA
#} 
res<-makeTable(predCFR)
if (num==0) {
table <- matrix(res$res)
} else {
table<-cbind(table, res$res)
}
num<-num+1
}
df<-as.data.frame(t(table))
names(df)<-res$header
t(table)
single_country_data
country <- "United_States_of_America"
start_time <- 45
time_window <- 90
source <- "ECDC"
forecast <- 7
gobacka <- 1
gobackb <- 151
time_CFR <- 30
outfile <- "out.txt"
if (source == "ECDC") {
my_data<-getDataFromECDC(ecdc_web)
} else if (source == "JH") {
my_data<-getDataFromJH(death_web, cases_web)
} else if (source == "JHUSA") {
my_data<-getDataFromJH(death_web_US, cases_web_US, TRUE)
} else if (source == "PC") {
my_data<-getDataFromITA(ita_web)
}
single_country_data<-getSingleCountryData(my_data, country, source)
num<-0
for(i in seq(gobackb, gobacka, -forecast)) {
predCFR<-calcCFR(single_country_data, start_time, time_window, i, forecast, 0, time_CFR)
#if (forecast>predCFR$delay) {
#predCFR$forecast<-NA
#predCFR$for_min<-NA
#predCFR$for_max<-NA
#} 
res<-makeTable(predCFR)
if (num==0) {
table <- matrix(res$res)
} else {
table<-cbind(table, res$res)
}
num<-num+1
}
df<-as.data.frame(t(table))
names(df)<-res$header
write.table(file=outfile, df, row.names=FALSE)
date<-as.Date(as.vector(df$"Day"), format('%d-%m-%y'))
date<-c(date, last(date)+forecast)
minfor<-c("NA", as.numeric(gsub(",", "", as.vector(df$"Min forecast"))))
maxfor<-c("NA", as.numeric(gsub(",", "", as.vector(df$"Max forecast"))))
deaths<-c(as.numeric(gsub(",", "", as.vector(df$"Deaths"))), "NA")
minf.df<-data.frame(date, as.numeric(minfor))
maxf.df<-data.frame(date, as.numeric(maxfor))
min_a <- pmin(minf.df, maxf.df)
max_a <- pmax(minf.df, maxf.df)
png_file<-paste0(country, "_", first(date), "_for_", forecast, ".png")
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(date, rev(date)), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA )
lines(date, deaths, col="black")
dev.off()
minfor
maxfor
deaths
minf.df<-data.frame(date, as.numeric(minfor))
maxf.df<-data.frame(date, as.numeric(maxfor))
date<-as.Date(as.vector(df$"Day"), format('%d-%m-%y'))
date<-c(date, last(date)+forecast)
last(date)
date<-c(date, tail(date, n=1)+forecast)
date
date<-as.Date(as.vector(df$"Day"), format('%d-%m-%y'))
date<-c(date, tail(date, n=1)+forecast)
minfor<-c("NA", as.numeric(gsub(",", "", as.vector(df$"Min forecast"))))
maxfor<-c("NA", as.numeric(gsub(",", "", as.vector(df$"Max forecast"))))
deaths<-c(as.numeric(gsub(",", "", as.vector(df$"Deaths"))), "NA")
minf.df<-data.frame(date, as.numeric(minfor))
maxf.df<-data.frame(date, as.numeric(maxfor))
min_a <- pmin(minf.df, maxf.df)
max_a <- pmax(minf.df, maxf.df)
png_file<-paste0(country, "_", first(date), "_for_", forecast, ".png")
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(date, rev(date)), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA )
lines(date, deaths, col="black")
dev.off()
png_file<-paste0(country, "_", first(date), "_for_", forecast, ".png")
png(png_file)
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(date, rev(date)), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA )
lines(date, deaths, col="black")
dev.off()
png_file
png_file<-paste0(c(country, "_", first(date), "_for_", forecast, ".png"))
png_file<-paste0(c(country, "_", head(date, n=1), "_for_", forecast, ".png"))
png_file
png_file<-paste0(country, "_", head(date, n=1), "_for_", forecast, ".png")
png_file
png(png_file)
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(date, rev(date)), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA )
lines(date, deaths, col="black")
dev.off()
quit("yes")
minf.df<-data.frame(date, as.numeric(minfor))
maxf.df<-data.frame(date, as.numeric(maxfor))
min_a <- pmin(minf.df, maxf.df)
max_a <- pmax(minf.df, maxf.df)
min_a
max_a
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(date, rev(date)), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA )
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
max_a[,2]
polygon(c(date, rev(date)), c(min_a[,2] ,rev(max_a[,2])), col = "gray", border=NA )
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(date, rev(date)), c(min_a[,2] ,max_a[,2]), col = "gray", border=NA )
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(date, rev(date)), c(min_a[,2] ,rev(min_a[,2])), col = "gray", border=NA )
a = data.frame(time = c(1:100), x = rnorm(100))
b = data.frame(time = c(1:100), y = rnorm(100))
c = data.frame(time = c(1:100), z = rnorm(100))
min_a <- pmin(a, b, c)
max_a <- pmax(a, b, c)
head(min_a)
head(max_a)
?pmin
min_a <- pmin(as.numeric(minfor), as.numeric(maxfor))
min_a
png_file<-paste0(country, "_", head(date, n=1), "_for_", forecast, ".png")
png_file
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(minf.df[,1], rev(minf.df[,1])), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA )
min_a <- pmin(minf.df, maxf.df)
max_a <- pmax(minf.df, maxf.df)
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(minf.df[,1], rev(minf.df[,1])), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA )
?polygon
ploygon(seq(1,10), seq(1,10))
polygon(seq(1,10), seq(1,10))
dev.off()
polygon(seq(1,10), seq(1,10))
polygon(seq(1,10), seq(1,10))
plot.new()
polygon(seq(1,10), seq(1,10))
polygon(c(1,1), c(10,10))
polygon(c(1,10), c(1,10))
polygon(seq(1,10), seq(10,1))
plot.new()
polygon(seq(1,10), seq(10,1))
polygon(seq(1,10), seq(10,1))
polygon(seq(1,10), seq(1,10))
polygon(seq(1,100), seq(1,10))
polygon(seq(1,100), seq(1,100))
polygon(as.numeric(minfor), as.numeric(maxfor))
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(minf.df[,1], rev(minf.df[,1])), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA )
?poygon
polygon(c(minf.df[,1], rev(minf.df[,1])), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA )l
?polygon?
?polygon
?polygon
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(minf.df[,1], rev(minf.df[,1])), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA , fillOddEven=TRUE)
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
#polygon(c(minf.df[,1], rev(minf.df[,1])), c(max_a[,2] ,rev(min_a[,2])), col = "gray", border=NA , fillOddEven=TRUE)
lines(date, deaths, col="black")
df
polygon(c(date,rev(date)),c(minfor,rev(maxfor)),col="skyblue")
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(date,rev(date)),c(minfor,rev(maxfor)),col="skyblue")
polygon(c(maxfor,minfor)),col="skyblue")
polygon(c(maxfor,minfor),col="skyblue")
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(maxfor,minfor),col="skyblue")
maxfor
minfor
x <- c(x.1,x.2,x.3,x.4,x.5,x.6,x.7,x.8,x.9,x.10)
x <- seq(-3,3,0.01)
y1 <- dnorm(x,0,1)
y2 <- 0.5*dnorm(x,0,1)
x
polygon(maxfor,minfor,col="skyblue")
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(maxfor,minfor,col="skyblue")
polygon(minf.df,maxf.df,col="skyblue")
minf.df<-c(date, as.numeric(minfor))
minf.df
as.numeric(minfor)
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(date, as.numeric(minfor),c(date, as.numeric(maxfor),col="skyblue")
)
)
plot(date, minfor, type="l", lty = 'dashed', col="red", main=country, xlab="", ylab="Deaths")
lines(date, maxfor, lty = 'dashed', col="red")
polygon(c(date, as.numeric(minfor)),c(date, as.numeric(maxfor)),col="skyblue")
polygon(c(date, as.numeric(minfor)))
x <- c(0,1,1,0)
x
y <- c(x[1:2]/2, x[3:4]/4)
y
polygon(x,y, col = 'green', border = NA)
plot.new()
dev.off()
plot.new()
polygon(x,y, col = 'green', border = NA)
plot.new()
dev.off()
plot.new()
polygon(c(date, as.numeric(minfor)),c(date, as.numeric(maxfor)),col="skyblue")
huron <- data.frame(year = 1875:1972, level = as.vector(LakeHuron))
huron
h <- ggplot(huron, aes(year))
library("gplot")
library("gplot2")
library("gpglot2")
library("gpglot")
library("ggglot")
library("ggglot2")
library("ggplot2")
h <- ggplot(huron, aes(year))
h + 
  geom_ribbon(
    aes(ymin = level - 1, ymax = level + 1), fill = "grey70") + 
  geom_line(aes(y = level))
datafr<-data.frame("minfor"<-minfor, "maxfor"<-maxfor, "deaths"<-deaths)
datafr
datafr<-data.frame("minfor" = minfor, "maxfor" = maxfor, "deaths" = deaths)
datafr<-data.frame("minfor" = minfor, "maxfor" = maxfor, "deaths" = deaths)
datafr
datafr<-data.frame("data"<-date, "minfor" = minfor, "maxfor" = maxfor, "deaths" = deaths)
datafr
datafr<-data.frame("date" = date, "minfor" = minfor, "maxfor" = maxfor, "deaths" = deaths)
datafr
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))
library("ggplot2")
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = deaths-1000, ymax = deaths+1000), fill = "grey70") + 
  geom_line(aes(y = deaths))
datafr
huron
h <- ggplot(huron, aes(year))
h
h + 
  geom_ribbon(
    aes(ymin = level - 1, ymax = level + 1), fill = "grey70") + 
  geom_line(aes(y = level))
h <- ggplot(datafr, aes(date))
h
h + 
  geom_ribbon(
    aes(ymin = deaths-1000, ymax = deaths+1000), fill = "grey70") + 
  geom_line(aes(y = deaths))
datafr<-data.frame("date" = date, "minfor" = as.numeric(minfor), "maxfor" = as.numeric(maxfor), "deaths" = as.numeric(deaths))
library("ggplot2")
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = deaths-1000, ymax = deaths+1000), fill = "grey70") + 
  geom_line(aes(y = deaths))
library("ggplot2")
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths)+
  geom_line(aes(y = minfor, color="red", linetype = "dashed")+
  geom_line(aes(y = maxfor, color="red", linetype = "dashed")
  )
)
)
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))+
  geom_line(aes(y = minfor, color="red", linetype = "dashed"))+
  geom_line(aes(y = maxfor, color="red", linetype = "dashed"))
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))+
  geom_line(aes(y = minfor, color="red", lty = "dashed"))+
  geom_line(aes(y = maxfor, color="red", lty = "dashed"))
library("ggplot2")
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))+
  geom_line(aes(y = minfor), color="red", linetype = "dashed")+
  geom_line(aes(y = maxfor), color="red", linetype = "dashed")
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))+
  geom_line(aes(y = minfor), color="red", linetype = "dashed")+
  geom_line(aes(y = maxfor), color="red", linetype = "dashed")+
  theme_classic()
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))+
  geom_line(aes(y = minfor), color="red", linetype = "dashed")+
  geom_line(aes(y = maxfor), color="red", linetype = "dashed")+
  theme_classic() +
  title(country)
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))+
  geom_line(aes(y = minfor), color="red", linetype = "dashed")+
  geom_line(aes(y = maxfor), color="red", linetype = "dashed")+
  theme_classic() +
  main(country)
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))+
  geom_line(aes(y = minfor), color="red", linetype = "dashed")+
  geom_line(aes(y = maxfor), color="red", linetype = "dashed")+
  theme_classic() +
  ggtitle(country)
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))+
  geom_line(aes(y = minfor), color="red", linetype = "dashed")+
  geom_line(aes(y = maxfor), color="red", linetype = "dashed")+
  theme_classic() +
  ggtitle(gsub("_", " ", country))
h <- ggplot(datafr, aes(date))
h + 
  geom_ribbon(
    aes(ymin = minfor, ymax = maxfor), fill = "grey70") + 
  geom_line(aes(y = deaths))+
  geom_line(aes(y = minfor), color="red", linetype = "dashed")+
  geom_line(aes(y = maxfor), color="red", linetype = "dashed")+
  theme_classic() +
  ggtitle(gsub("_", " ", country)) + 
  theme(plot.title = element_text(hjust = 0.5))
quit("yes")
